import { openai } from '../services/ai.js';

/**
 * Moderates user input to ensure it doesn't contain inappropriate content.
 * @param {string} inputText - Text provided by the user.
 * @returns {Promise<{flagged: boolean, message: string}>} - Moderation result.
 */
export async function moderateUserMessage(inputText) {
	try {
		const moderation = await openai.moderations.create({
			input: inputText,
		});
		// reveive the categories of moderation and their boolean results of whether the message
		// is likely to contain that category of content
		const categories = moderation.results[0]?.categories;
		const moderationResultsString = JSON.stringify(moderation.results, null, 2);
		console.log(
			`-------\n USER MESSAGE MODERATION RESULTS: \n ${moderationResultsString}\n-------`
		);

		let isFlagged = false;

		if (categories?.['sexual/minors'] || categories?.['self-harm/instructions']) {
			isFlagged = true;
			console.log(`***Content flagged and removed from response: ${inputText}***`);
			inputText = 'Inappropriate content detected and removed. Please inform the user.';
		}

		return {
			flagged: isFlagged,
			message: inputText,
		};
	} catch (error) {
		console.error('Error in moderation:', error);
		throw new Error('Failed to moderate user message.');
	}
}

/**
 * Moderates responses generated by the system before sending to the user.
 * @param {Array<{text: string}>} responseMessages - Responses to be sent to the user.
 * @returns {Promise<{flagged: boolean, messages: Array<{text: string}>}>} - Moderation result.
 */
export async function moderateAIResponse(responseMessages) {
	let isFlagged = false;

	for (const message of responseMessages) {
		const moderation = await openai.moderations.create({
			input: message.text,
		});

		const moderationResultsString = JSON.stringify(moderation.results, null, 2);
		console.log(
			`-------\n CHATBOT RESPONSE MESSAGE MODERATION CHECK RESULTS: \n ${moderationResultsString}\n-------`
		);

		const categories = moderation.results[0]?.categories;

		if (categories?.['sexual/minors'] || categories?.['self-harm/instructions']) {
			isFlagged = true;
			console.log(`***Content flagged and removed from response: ${message.text}***`);
			message.text = 'Inappropriate response content detected and removed.';
		}
	}

	return {
		flagged: isFlagged,
		messages: responseMessages,
	};
}
